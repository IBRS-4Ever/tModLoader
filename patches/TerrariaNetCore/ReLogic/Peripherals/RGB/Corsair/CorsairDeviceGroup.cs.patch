--- src/Terraria/ReLogic/Peripherals/RGB/Corsair/CorsairDeviceGroup.cs
+++ src/TerrariaNetCore/ReLogic/Peripherals/RGB/Corsair/CorsairDeviceGroup.cs
@@ -17,6 +_,9 @@
 	private readonly List<RgbDevice> _devices = new List<RgbDevice>();
 	private State _state;
 	private readonly VendorColorProfile _colorProfiles;
+#if NETCORE
+	private bool _initializationFailed;
+#endif
 
 	public CorsairDeviceGroup(VendorColorProfile colorProfiles)
 	{
@@ -27,6 +_,30 @@
 	{
 		if (_state == State.AnyDevicesAdded)
 			return;
+
+#if NETCORE
+		if (_initializationFailed)
+			return;
+
+		// TML: Added additional parameters to make the dll actually load. See changes in NativeMethods.
+		// Also wrapped in Try-Catch to match other 'Try Load' calls that can toss exceptions, since non-critical
+		/*
+		if (!NativeLibrary.TryLoad(NativeMethods.DLL_NAME, out _)) {
+		*/
+		try {
+			if (!NativeLibrary.TryLoad(NativeMethods.DLL_NAME, System.Reflection.Assembly.GetEntryAssembly(), DllImportSearchPath.SafeDirectories, out _)) {
+				_initializationFailed = true;
+				
+				return;
+			}
+		}
+		catch (Exception e) {
+			Console.WriteLine("Corsair RGB failed to initialize: " + e);
+			_initializationFailed = true;
+
+			return;
+		}
+#endif
 
 		try {
 			if (_state < State.HandshakeCompleted) {
